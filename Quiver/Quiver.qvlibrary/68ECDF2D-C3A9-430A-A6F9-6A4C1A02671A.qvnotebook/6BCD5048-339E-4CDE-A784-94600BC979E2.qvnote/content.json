{
  "title": "JS",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"jumbotron\" style=\"box-sizing: border-box; padding: 48px 30px; margin-bottom: 30px; background-color: rgb(238, 238, 238); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\"><div class=\"container\" style=\"box-sizing: border-box; margin-right: auto; margin-left: auto; padding-left: 15px; padding-right: 15px; width: 1170px; max-width: 100%;\"><h1 style=\"box-sizing: border-box; font-size: 63px; margin: 20px 0px 10px; font-family: inherit; font-weight: 500; color: inherit;\">S: Basics and Tricky Questions</h1><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">Part -2: intermediate</h2><p style=\"box-sizing: border-box; margin: 0px 0px 15px; font-size: 21px;\">June 22, 2014</p><div id=\"fb-root\" class=\" fb_reset\" style=\"box-sizing: border-box; background-image: none; border: 0px; border-spacing: 0px; color: rgb(0, 0, 0); cursor: auto; direction: ltr; font-family: 'lucida grande', tahoma, verdana, arial, sans-serif; font-size: 11px; line-height: 1; margin: 0px; overflow: visible; padding: 0px; text-shadow: none; visibility: visible; word-spacing: normal;\"><div style=\"box-sizing: border-box; overflow: hidden; position: absolute; top: -10000px; height: 0px; width: 0px;\"><div style=\"box-sizing: border-box;\"><iframe name=\"fb_xdm_frame_http\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" id=\"fb_xdm_frame_http\" aria-hidden=\"true\" title=\"Facebook Cross Domain Communication Frame\" tabindex=\"-1\" src=\"http://staticxx.facebook.com/connect/xd_arbiter.php?version=42#channel=f35d4bfaf&amp;origin=http%3A%2F%2Fthatjsdude.com\" style=\"box-sizing: border-box; border-style: none;\"></iframe><iframe name=\"fb_xdm_frame_https\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" id=\"fb_xdm_frame_https\" aria-hidden=\"true\" title=\"Facebook Cross Domain Communication Frame\" tabindex=\"-1\" src=\"https://staticxx.facebook.com/connect/xd_arbiter.php?version=42#channel=f35d4bfaf&amp;origin=http%3A%2F%2Fthatjsdude.com\" style=\"box-sizing: border-box; border-style: none;\"></iframe></div></div><div style=\"box-sizing: border-box; overflow: hidden; position: absolute; top: -10000px; height: 0px; width: 0px;\"><div style=\"box-sizing: border-box;\"></div></div></div><div class=\"fb-like fb_iframe_widget\" data-href=\"http://www.thatjsdude.com/interview/js2.html\" data-layout=\"button_count\" data-action=\"like\" data-show-faces=\"false\" data-share=\"false\" fb-xfbml-state=\"rendered\" fb-iframe-plugin-query=\"action=like&amp;app_id=&amp;container_width=1140&amp;href=http%3A%2F%2Fwww.thatjsdude.com%2Finterview%2Fjs2.html&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;share=false&amp;show_faces=false\" style=\"box-sizing: border-box; display: inline-block; position: relative;\"><span style=\"box-sizing: border-box; display: inline-block; position: relative; text-align: justify; vertical-align: bottom; width: 79px; height: 20px;\"><iframe name=\"f93c2fbe8\" width=\"1000px\" height=\"1000px\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" title=\"fb:like Facebook Social Plugin\" src=\"http://www.facebook.com/plugins/like.php?action=like&amp;app_id=&amp;channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter.php%3Fversion%3D42%23cb%3Df2ac28998c%26domain%3Dthatjsdude.com%26origin%3Dhttp%253A%252F%252Fthatjsdude.com%252Ff35d4bfaf%26relation%3Dparent.parent&amp;container_width=1140&amp;href=http%3A%2F%2Fwww.thatjsdude.com%2Finterview%2Fjs2.html&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;share=false&amp;show_faces=false\" class=\"\" style=\"box-sizing: border-box; position: absolute; border-style: none; visibility: visible; width: 79px; height: 20px;\"></iframe></span></div>&nbsp;&nbsp;<div id=\"___plusone_0\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; background-color: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 106px; height: 24px;\"><iframe frameborder=\"0\" hspace=\"0\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" tabindex=\"0\" vspace=\"0\" width=\"100%\" id=\"I0_1452551438318\" name=\"I0_1452551438318\" src=\"https://apis.google.com/u/0/se/0/_/+1/fastbutton?usegapi=1&amp;origin=http%3A%2F%2Fthatjsdude.com&amp;url=http%3A%2F%2Fthatjsdude.com%2Finterview%2Fjs2.html&amp;gsrc=3p&amp;ic=1&amp;jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.en.YZIyGzi07Hg.O%2Fm%3D__features__%2Fam%3DAQ%2Frt%3Dj%2Fd%3D1%2Ft%3Dzcms%2Frs%3DAGLTcCOhuHyqZx0jDJFxWAW-okVXQVjy2g#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh%2Conload&amp;id=I0_1452551438318&amp;parent=http%3A%2F%2Fthatjsdude.com&amp;pfname=&amp;rpctoken=39212489\" data-gapiattached=\"true\" title=\"+1\" style=\"box-sizing: border-box; position: static; top: 0px; width: 106px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 24px;\"></iframe></div></div></div><div class=\"container\" style=\"box-sizing: border-box; margin-right: auto; margin-left: auto; padding-left: 15px; padding-right: 15px; width: 1170px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\"><div class=\"row center\" style=\"box-sizing: border-box; margin-left: -15px; margin-right: -15px;\"></div><div style=\"box-sizing: border-box;\"><h4 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 10px; margin-bottom: 10px; font-size: 18px;\">List of Questions</h4><ol style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#nullVsUndefined\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">What are the differences between&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">null</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">undefined</code>?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#doubleVsTripleEqual\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">What are the differences between&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">==</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">===</code>?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#objectEquality\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How would you compare two objects in JavaScript?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#trueLies\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">11+ true false related questions that will trick you.</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#truthyVsEqality\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">As&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]</code>&nbsp;is true,&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]==true</code>&nbsp;should also be true. right?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#extendObject\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you write a method on instance of a date which will give you next day?</a></li><li class=\"skipListItem\" style=\"box-sizing: border-box; list-style-type: none;\"><a href=\"http://thatjsdude.com/interview/js2.html#extendObject\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">If i have a&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var str = 'hello world'</code>, how could i get&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">str.reverse()</code>&nbsp;return 'dlrow olleh'?</a></li><li class=\"skipListItem\" style=\"box-sizing: border-box; list-style-type: none;\"><a href=\"http://thatjsdude.com/interview/js2.html#extendObject\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you make this work [1,2,3,4,5].duplicator(); // [1,2,3,4,5,1,2,3,4,5] ?</a></li><li value=\"7\" style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#bindthis\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">If you want to use an arbitrary object as value of this, how will you do that?</a></li><li class=\"skipListItem\" style=\"box-sizing: border-box; list-style-type: none;\"><a href=\"http://thatjsdude.com/interview/js2.html#bindthis\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">If an older browser dont have bind function, how will you shim it</a></li><li value=\"8\" style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#call\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Write a simple function to tell whether 2 is passed as parameter or not?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#apply\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you use Math.max to find the max value in an array?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#this\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">What the heck is this in JavaScript?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#rapidFire\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">21+ small but tricky questions</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#insertSpace\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you set a prefix before everything you log? for example, if you log('my message') it will log: \"(app) my message\"</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#scopeAndHoisting\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">What will you see in the console for the following example?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#closure\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Look at the code below, you have a for loop if you have setTimeout inside it. If log the loop counter inside setTimeout, what will be logged?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#deleteProperty\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Look at the code below, I have a property in a object and I am creating a new object where I am setting it to a new value. If I delete that property what will i get if I try to access that property?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#byValueByRef\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Does JavaScript pass parameter by value or by reference?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#memoization\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you implement cache to save calculation time for a recursive fibonacci function?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#cacheFunction\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you cache execution of any function?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#chianing\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">If you need to implement the following chaining with call back, how will you implement it?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#animation\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How could you implement moveLeft animation?</a></li><li style=\"box-sizing: border-box;\"><a href=\"http://thatjsdude.com/interview/js2.html#currying\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">How would you implement currying for any functions?</a></li></ol></div><p class=\"gray\" style=\"box-sizing: border-box; margin: 0px 0px 10px; color: gray;\"><span class=\"purpleBold\" style=\"box-sizing: border-box; color: purple; font-weight: bold;\">More Questions:&nbsp;</span><a href=\"http://thatjsdude.com/interview/js1.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Algorithm related questions</a>,&nbsp;<a href=\"http://thatjsdude.com/interview/dom.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">dom related</a>,&nbsp;<a href=\"http://thatjsdude.com/interview/css.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">css related</a>,&nbsp;<a href=\"http://thatjsdude.com/interview/html.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">html related</a></p><div id=\"nullVsUndefined\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">1. null vs undefined</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>What are the differences between&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">null</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">undefined</code>?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;JavaScript has two distinct values for nothing, null and undefined.</p><h4 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 10px; margin-bottom: 10px; font-size: 18px;\">undefined</h4><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">undefined</code>&nbsp;means, value of the variable is not defined. JavaScript has a global variable&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">undefined</code>&nbsp;whose value is \"undefined\" and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">typeof undefined</code>&nbsp;is also \"undefined\". Remember, undefined is not a constant or a keyword. undefined is a type with exactly one value: undefined. Assigning a new value to it does not change the value of the type undefined.</p><span style=\"box-sizing: border-box; font-weight: 700;\">8 Ways to get Undefined:</span><ul style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\">A declared variable without assigning any value to it.</li><li style=\"box-sizing: border-box;\">Implicit returns of functions due to missing return statements.</li><li style=\"box-sizing: border-box;\">return statements that do not explicitly return anything.</li><li style=\"box-sizing: border-box;\">Lookups of non-existent properties in an object.</li><li style=\"box-sizing: border-box;\">Function parameters that have not passed.</li><li style=\"box-sizing: border-box;\">Anything that has been set to the value of undefined.</li><li style=\"box-sizing: border-box;\">Any expression in the form of void(expression)</li><li style=\"box-sizing: border-box;\">The value of the global variable&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">undefined</code></li></ul><h4 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 10px; margin-bottom: 10px; font-size: 18px;\">null</h4><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">null</code>&nbsp;means empty or non-existent value which is used by programmers to indicate “no value”. null is a primitive value and you can assign null to any variable. null is not an object, it is a primitive value. For example, you cannot add properties to it. Sometimes people wrongly assume that it is an object, because typeof null returns \"object\".</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Btw,&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">null == undefined</code>&nbsp;ref:&nbsp;<a href=\"http://www.2ality.com/2013/10/typeof-null.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">history of typeof null</a></p></div><div id=\"doubleVsTripleEqual\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">2. == Vs ===</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What are the differences between&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">==</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">===</code>?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span>The simplest way of saying that, == will not check types and === will check whether both sides are of same type. So, == is tolerant. But under the hood it converts to its convenient type to have both in same type and then do the comparison.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">=== compares the types and values. Hence, if both sides are not same type, answer is always false. For example, if you are comparing two strings, they must have identical character sets. For other primitives (number, boolean) must share the same value.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Rule for implicit coercion:</span>&nbsp;Comparison by using == does implicit type conversion under the hood. And rules for implicit coercion are as follows-</p><ul style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\">If both operands are same type use ===</li><li style=\"box-sizing: border-box;\">undefined == null</li><li style=\"box-sizing: border-box;\">If one operands is string another is number, convert string to number</li><li style=\"box-sizing: border-box;\">If one is boolean and another is non-boolean, convert boolean to number and then perform comparison</li><li style=\"box-sizing: border-box;\">While comparing a string or number to an object, try to convert the object to a primitive type and then try to compare</li></ul><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Be careful while comparing objects, identifiers must reference the same objects or same array.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"coffeescript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"reserved\" style=\"box-sizing: border-box;\">var</span> a = {<span class=\"attribute\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">a</span>: <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>};\n<span class=\"reserved\" style=\"box-sizing: border-box;\">var</span> b = {<span class=\"attribute\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">a</span>: <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>};\na == b <span class=\"regexp\" style=\"box-sizing: border-box;\">//</span><span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">false</span>\na === b <span class=\"regexp\" style=\"box-sizing: border-box;\">//</span><span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">false</span>\n\n<span class=\"reserved\" style=\"box-sizing: border-box;\">var</span> c = a;\na == c<span class=\"regexp\" style=\"box-sizing: border-box;\">//</span><span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">true</span>\na === c <span class=\"regexp\" style=\"box-sizing: border-box;\">//</span><span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">true</span>\n          </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Special note: NaN, null and undefined will never === another type. NaN does not even === itself.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Homework:</span>&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Read confusing special cases of NaN</a></p></div><div id=\"objectEquality\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">3. Object Equality</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>How would you compare two objects in JavaScript?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Basics:</span>&nbsp;JavaScript has two different approaches for testing equality. Primitives like strings and numbers are compared by their value, while objects like arrays, dates, and user defined objects are compared by their reference. This means it compares whether two objects are referring to the same location in memory.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Equality check will check whether two objects have same value for same property. To check that, you can get the keys for both the objects. If the number of properties doesn't match, these two objects are not equal. Secondly, you will check each property whether they have the same value. If all the properties have same value, they are equal.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">isEqual</span><span class=\"params\" style=\"box-sizing: border-box;\">(a, b)</span> {</span>\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> aProps = Object.getOwnPropertyNames(a),\n        bProps = Object.getOwnPropertyNames(b);\n\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (aProps.length != bProps.length) {\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">false</span>;\n    }\n\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">for</span> (<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> i = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">0</span>; i &lt; aProps.length; i++) {\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> propName = aProps[i];\n        \n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (a[propName] !== b[propName]) {\n            <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">false</span>;\n        }\n    }\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">true</span>;\n}\n        </code></pre><span style=\"box-sizing: border-box; font-weight: 700;\">Limitation:</span><ul style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\">If one of the property values is itself an object</li><li style=\"box-sizing: border-box;\">If one of the property values is NaN (the only value in JavaScript that is not equal to itself?)</li><li style=\"box-sizing: border-box;\">If one object has a property with value undefined, while another object doesn't have the property (which thus evaluates as undefined). Btw, you can solve this problem by using hasOwnProperty</li></ul><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"http://designpepper.com/blog/drips/object-equality-in-javascript.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">object equality in JS</a>,&nbsp;<a href=\"http://underscorejs.org/docs/underscore.html#section-90\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Underscore.js isEqual function</a></p></div><div id=\"trueLies\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">4. True Lies</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;11+ true false related questions that will trick you.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">falsy:</span>&nbsp;In javascript 6 things are falsy and they are- false, null, undefined, '', 0, NaN</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">truthy:</span>&nbsp;There are only two truthy things- true and everything that is not false</p><div style=\"box-sizing: border-box;\"><h3 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 24px;\">True False Rapid Fire</h3><div id=\"trueFalseRapidExample\" class=\"bg-success toggleContent\" style=\"box-sizing: border-box; background-color: rgb(223, 240, 216); padding: 10px;\"><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">'false'</code>&nbsp;is false?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;No. Because, it's a string with length greater than 0. Only empty string is false.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">' '</code>&nbsp;is false?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;No. Because, it's not an empty string. There is a white space in it.&nbsp;</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>What about&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">{}</code>?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span>true. It's an object. An object without any property is an object can't be falsy.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>Tell me about&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]</code>?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span>This is also truthy. It's an array object (array is child of object) is truthy.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>You talked bout&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">''</code>&nbsp;to be falsy. What about&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">new String('')</code>?&nbsp;</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Though you are passing empty string to the string constructor, it is creating an String object. More precisely a instance of String object. It becomes an object. Hence, it is not false. so, it is truthy.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Tell me about&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">new Boolean(false)</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;truthy. As it creates an instance of the Boolean object which is an object. Object is truthy.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">Boolean(function(){})</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">true</code>&nbsp;if you pass a truthy value to Boolean, it will be true.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">Boolean(/foo/)</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">true</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">true%1</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;0. When you are trying to find reminder of true, true becomes 1 and reminder of 1 while dividing by 1 is 0. you will get same result if you doe&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">false%1</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">''%1</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;0</p></div></div><div id=\"truthyVsEqality\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">5. Truthy isn't Equal to true</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>As&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]</code>&nbsp;is true,&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]==true</code>&nbsp;should also be true. right?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;You are right about first part,&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]</code>, empty array is an object and object is always truthy. Hence, if you use&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">if([]){console.log('its true')}</code>&nbsp;you will see the log.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">However, special case about&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">==</code>&nbsp;(double equal) is that it will do some implicit coercion.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Since left and right side of the equality are two different types, JavaScript can't compare them directly . Hence, under the hood, JavaScript will convert them to compare. first right side of the equality will be cooereced to a number and number of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">true</code>&nbsp;would be 1.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">After that, JavaScript implementation will try to convert&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[]</code>&nbsp;by using<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">toPrimitive</code>&nbsp;(of JavaScript implementation). since&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[].valueOf</code>&nbsp;is not primitive will use&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">toString</code>&nbsp;and will get&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">\"\"</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Now you are comparing \"\" == 1 and still left and right is not same type. Hence left side will be converted again to a number and empty string will be 0.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Finally, they are of same type, you are comparing&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">0 === 1</code>&nbsp;which will be false.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">angus croll: truth and eqality in JS</a>, ref:&nbsp;<a href=\"http://www.sitepoint.com/javascript-truthy-falsy/\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">truthy and falsy</a></p></div></div><div id=\"extendObject\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">6. Extend Core Object</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;How could you write a method on instance of a date which will give you next day?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;I have to declare a method on the prototype of Date object. To get access to the current value of the instance of the date, i will use&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code></p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\nDate.prototype.nextDay = <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> currentDate = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.getDate();\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">new</span> Date(<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.setDate(currentDate +<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>));\n}\n\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> date = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">new</span> Date(); \ndate; <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//Fri May 16 2014 20:47:14 GMT-0500 (Central Daylight Time)</span>\ndate.nextDay();<span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//Sat May 17 2014 20:47:14 GMT-0500 (Central Daylight Time)</span>\n        </code></pre><div style=\"box-sizing: border-box;\"><button id=\"extendCoreObjectMore\" type=\"button\" class=\"toggleExample btn btn-primary\" style=\"color: rgb(255, 255, 255); font-family: inherit; font-size: 14px; font-style: inherit; font-variant: inherit; line-height: 1.42857143; margin: 0px; overflow: visible; cursor: pointer; vertical-align: middle; background-image: none; border: 1px solid rgb(53, 126, 189); white-space: nowrap; padding: 6px 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; -webkit-user-select: none; background-color: rgb(66, 139, 202);\">Show Similar Question</button></div></div><div id=\"bindthis\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">7. bind</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>If you want to use an arbitrary object as value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>, how will you do that?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;There are at least three different ways to doing this by using bind, call and apply. For example, I have a method named deductMontlyFee in the object monica and by default value of this would be monica inside the method.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> monica = {\n  name: <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'Monica Geller'</span>,\n  total: <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">400</span>,\n  deductMontlyFee: <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(fee)</span>{</span>\n     <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.total = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.total - fee;\n     <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.name + <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">' remaining balance is '</span>+ <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.total; \n  }\n}\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">If I bind the deductMontlyFee of monica with another object&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">rachel</code>&nbsp;and pass rachel as first parameter of the bind function, rachel would be the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> rachel = {name: <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'Rachel Green'</span>, total: <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1500</span>};\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> rachelFeeDeductor = monica.deductMonthlyFee.bind(rachel, <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">200</span>);\n\nrachelFeeDeductor(); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"Rachel Green remaining balance is 1300\"</span>\nrachelFeeDeductor(); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"Rachel Green remaining balance is 1100\"</span>\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">bind</code>&nbsp;allows you to borrow a method and set the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>&nbsp;without calling the function. It simply returns an exact copy of the function with new value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>. You can reuse the same function with new value of this without harming the old one.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> ross = {name:<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'Ross Geller'</span>, total:<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">250</span>};\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> rossFeeDeductor = monica.deductMonthlyFee.bind(ross, <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">25</span>);\nrossFeeDeductor(); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"Ross Geller remaining balance is 225\"</span>\nrossFeeDeductor(); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"Ross Geller remaining balance is 200\"</span>\n\nrachelFeeDeductor(); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"Rachel Green remaining balance is 900\"</span>\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;If an older browser dont have bind function, how will you shim it</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Look at the code below and use your brain.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"php\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\nFunction.prototype.bind = Function.prototype.bind || <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(context)</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">self</span> = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>;\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span>{</span>\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">self</span>.apply(context, arguments);\n  };\n}\n        </code></pre></div><div id=\"call\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">8. arguments and call</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Write a simple function to tell whether 2 is passed as parameter or not?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Basics:</span>&nbsp;arguments is a local variable, available inside all functions that provides a collection of all the arguments passed to the function.&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">arguments</code>&nbsp;is not an array rather an array like object. It has length but doesn't have the methods like forEach, indexOf, etc.&nbsp;</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span>First convert arguments to an array by calling slice method on an array and pass arguments. After that simply use indexOf.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"php\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">isTwoPassed</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> args = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">Array</span>.prototype.slice.call(arguments);\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> args.indexOf(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">2</span>) != -<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>;\n}\n\nisTwoPassed(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>,<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">4</span>) <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//false</span>\nisTowPassed(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">5</span>,<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">3</span>,<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>,<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">2</span>) <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//true</span>\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Danger:</span>&nbsp;Don't name any argument as \"arguments\" or dont create any local variable named as \"arguments\", this will override build in arguments object.</p></div><div id=\"apply\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">9. apply</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;How could you use Math.max to find the max value in an array?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Use apply on Math.max and pass the array as apply takes an array of arguments. Since we are not reading anything from this or using it at all. We can simply pass null as first parameter.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">getMax</span><span class=\"params\" style=\"box-sizing: border-box;\">(arr)</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> Math.max.apply(<span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">null</span>, arr);  \n}\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Extra:&nbsp;</span>call and apply, both takes the value of this as first parameter. However, call takes a collection of arguments after first parameter whereas apply use an array of arguments as second parameter.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Tip:&nbsp;</span>If you have weaker memory like me, you can remember apply starts with \"a\" and array starts with \"a\"</p></div><div id=\"this\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">10. this</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What the heck is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>&nbsp;in JavaScript?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;At the time of execution of every function, JavaScript engine sets a property to the function called&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>&nbsp;which refer to the current execution context.&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>&nbsp;is always refer to an object and depends on how function is called. There are 7 different cases where the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this</code>&nbsp;varies.</p><ol style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\">In the global context or inside a function this refers to the window object.</li><li style=\"box-sizing: border-box;\">Inside IIFE (immediate invoking function) if you use \"use strict\", value of this is undefined. To pass access window inside IIFE with \"use strict\", you have to pass this.</li><li style=\"box-sizing: border-box;\">While executing a function in the context of an object, the object becomes the value of this</li><li style=\"box-sizing: border-box;\">Inside a setTimeout function, the value of this is the window object.</li><li style=\"box-sizing: border-box;\">If you use a constructor (by using new keyword) to create an object, the value of this will refer to the newly created object.</li><li style=\"box-sizing: border-box;\">You can set the value of this to any arbitrary object by passing the object as the first parameter of bind, call or apply</li><li style=\"box-sizing: border-box;\">For dom event handler, value of this would be the element that fired the event</li></ol><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"https://www.youtube.com/watch?v=yuo8YqKDQ-M\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Understand JavaScript this in a crystal clear way</a></p></div><div id=\"rapidFire\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">11. Rapid Fire</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">typeof []</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Object. Actually Array is derived from Object. If you want to check array use&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">Array.isArray(arr)</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">typeof arguments</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Object. arguments are array like but not array. it has length, can access by index but can't push pop, etc.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">2+true</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;3. The plus operator between a number and a boolean or two boolean will convert boolean to number. Hence, true converts to 1 and you get result of 2+1&nbsp;</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">'6'+9</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;69. If one of the operands of the plus (+) operator is string it will convert other number or boolean to string and perform a concatenation. For the same reason,&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">\"2\"+true</code>will return \"2true\"</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">4+3+2+\"1\"</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;91 . The addition starts from the left, 4+3 results 7 and 7+2 is 9. So far, the plus operator is performing addition as both the operands are number. After that 9 + \"1\" where one of the operands is string and plus operator will perform concatenation.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">\"1\"+2+4</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;\"124\". For this one \"1\" + 2 will produce \"12\" and \"12\"+4 will generates \"124\".</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">-'34'+10</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;-24. minus(-) in front of a string is an unary operator that will convert the string to a number and will make it negative. Hence, -'34' becomes, -34 and then plus (+) will perform simple addition as both the operands are number.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">+'dude'</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;NaN. The plus (+) operator in front of a string is an unary operator that will try to convert the string to number. Here, JavaScript will fail to convert the \"dude\" to a number and will produce NaN.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;If you have&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var y = 1, x = y = typeof x;</code>&nbsp;What is the value of x?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;\"undefined\"</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;for&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var a = (2, 3, 5);</code>&nbsp;what is the value of a?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;5. The comma operator evaluates each of its operands (from left to right) and returns the value of the last operand. ref:&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comma_Operator\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">MDN</a></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;for&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var a = (1, 5 - 1) * 2</code>&nbsp;what is the value of a?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;8</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">!'bang'</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;false.&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">!</code>&nbsp;is NOT. If you put&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">!</code>&nbsp;in front of truthy values, it will return false. Using !! (double bang) is a tricky way to check anything truthy or falsy by avoiding implicit type conversion of == comparison.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">parseFloat('12.3.4')</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;12.3</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">Math.max([2,3,4,5]);</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;NaN</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">3 instanceof Number</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;false</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">null == undefined</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;true</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">!!function(){};</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;true</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">typeof bar</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;\"undefined\"</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is the value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">typeof null</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;\"object\"</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;If&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var a = 2, b =3</code>&nbsp;what would be value of&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">a &amp;&amp; b</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;3</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What would be consoled&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var foo = 'outside'; function logIt(){console.log(foo); var foo = 'inside';} logIt();</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;undefined</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">-5%2</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>-1. the result of remainder always get the symbol of first operand</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Why&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">.1+.2 != .3</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">42..toString()</code></span></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Anwser:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">\"42\"</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">4.2..toString</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Anwser:</span>&nbsp;//SyntaxError: Unexpected token .</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">42 . toString()</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Anwser:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">\"42\"</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">typeof(NaN)</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Anwser:</span>\"number\"</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">2 in [1,2]</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Anwser:</span>&nbsp;false. Because \"in\" returns whether a particular property/index available in the Object. In this case object has index 0 and 1 but don't have 2. Hence you get false.</p></div><div id=\"insertSpace\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">12. log prefix</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>How could you set a prefix before everything you log? for example, if you&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">log('my message')</code>&nbsp;it will log: \"(app) my message\"</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Just get the arguments, convert it to an array and unshift whatever prefix you want to set. Finally, use apply to pass all the arguments to console.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"php\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">log</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> args = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">Array</span>.prototype.slice.call(arguments);\n  args.unshift(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'(app)'</span>);\n  console.log.apply(console, args);\n}\n\nlog(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'my message'</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//(app) my message</span>\nlog(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'my message'</span>, <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'your message'</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//(app) my message your message </span>\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"http://blog.sourcing.io/interview-questions\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">This is a really good materials, walks you through an interview process.</a></p></div><div id=\"scopeAndHoisting\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">13. Scope and hoisting</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What will you see in the console for the following example?</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> a = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>; \n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">b</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span> \n    a = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>; \n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span>; \n    <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">a</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span>} \n} \nb(); \nconsole.log(a);          \n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;1</p><h4 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 10px; margin-bottom: 10px; font-size: 18px;\">Explanation:</h4><ul style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\">function declaration&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">function a(){}</code>&nbsp;is hoisted first and it behaves like&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">var a = function () {};</code>. Hence in local scope variable&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">a</code>&nbsp;is created.</li><li style=\"box-sizing: border-box;\">If you have two variables with same name (one in global another in local), local variable always get precedence over global variable.</li><li style=\"box-sizing: border-box;\">When you set&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">a = 10;</code>, you are setting the local variable&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">a</code>&nbsp;, not the global one. Hence, the value of global variable remain same and you get, 1 in the log. ref: js hoisting/scope</li><li style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Extra:</span>&nbsp;If you didnt have a function named as \"a\", you will see 10 in the log.</li></ul><div style=\"box-sizing: border-box;\"><button id=\"hoistingExtra\" type=\"button\" class=\"toggleExample btn btn-primary\" style=\"color: rgb(255, 255, 255); font-family: inherit; font-size: 14px; font-style: inherit; font-variant: inherit; line-height: 1.42857143; margin: 0px; overflow: visible; cursor: pointer; vertical-align: middle; background-image: none; border: 1px solid rgb(53, 126, 189); white-space: nowrap; padding: 6px 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; -webkit-user-select: none; background-color: rgb(66, 139, 202);\">Show Tough Example</button></div><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"https://www.youtube.com/watch?v=7INtYcr8QIY\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">watch this video</a>&nbsp;or&nbsp;<a href=\"http://www.thatjsdude.com/jsConcepts/concepts/scope.html\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">learn more about scope and hoisting</a></p></div><div id=\"closure\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">14. Closures Inside Loops</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Look at the code below, you have a for loop if you have setTimeout inside it. If log the loop counter inside setTimeout, what will be logged?</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">for</span>(<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> i = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">0</span>; i &lt; <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>; i++) {\n    setTimeout(<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span>\n      console.log(i);  \n    }, <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>);\n}\n</code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;The above will not output the numbers 0 through 9, but will simply print the number 10 ten times.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Explanation:</span>&nbsp;The console log is inside the anonymous function of setTimeout and setTimeout is executed when current call stack is over. So, the loop finishes and before setTimeout get the chance to execute. However, anonymous functions keep a reference to i by creating a closure. Since, the loop is already finished, the value i has been set to 10. When setTimeout use the value of i by reference, it gets the value of i as 10. Hence, you see 10 ten times.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Solution:&nbsp;</span>You can fix it by avoiding closure. Just create a IIFE (Immediately Invoked Function Expression), it will create its own scope and you can pass i to the function. In that case i will be a local variable (will not refer to i in the closure) and value of the i in every loop will be preserved.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">for</span>(<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> i = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">0</span>; i &lt; <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>; i++) {\n    setTimeout((<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(i)</span> {</span>\n      console.log(i);\n    })(i), <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>)\n}\n</code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Alternative Solution:</span>&nbsp;Look at the code below and use your brain (if any).</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"coffeescript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">for</span>(<span class=\"reserved\" style=\"box-sizing: border-box;\">var</span> i = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">0</span>; i &lt; <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>; i++) {\n  setTimeout(console.log.bind(<span class=\"built_in\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">console</span>, i), <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>);\n}\n</code></pre></div><div id=\"deleteProperty\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">15. delete can delete but</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Look at the code below, I have a property in a object and I am creating a new object where I am setting it to a new value. If I delete that property what will i get if I try to access that property?</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> myObject = {\n    price: <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">20.99</span>,\n    get_price : <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span>\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>.price;\n    }\n};\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> customObject = Object.create(myObject);\ncustomObject.price = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">19.99</span>;\n\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">delete</span> customObject.price;\nconsole.log(customObject.get_price());\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;You will see 20.99</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Explanation:</span>&nbsp;This is very interesting question. When you create&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">object.create(myObject)</code>&nbsp;you are creating new object where the&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">myObject</code>&nbsp;will be the parent of the newly created object. Hence the price property will be at the parent.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">When you are assigning some value to&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">customObject.price</code>, you are creating a new property on the child. This means, when you&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">delete customObject.price</code>&nbsp;it deletes the&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">price</code>&nbsp;property in the customObject (in the child). However, when you call the method getprice, first it looks for&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">this.price</code>&nbsp;in the child since the customObject doesn't have price property, JavaScript executor walks through the prototype chain towards the parent. Since customObject was inherited from myObject and myObject has a&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">price</code>&nbsp;property, the get_price method returns the price from parent. Hence, you are getting 20.99</p></div><div id=\"byValueByRef\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">16. Pass by value or by reference</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;Does JavaScript pass parameter by value or by reference?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Primitive type (string, number, etc.) are passed by value and objects are passed by reference. If you change a property of the passed object, the change will be affected. However, you assign a new object to the passed object, the changes will not be reflected.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> num = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;name = <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"Addy Osmani\"</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;obj1 = {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value: <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"first value\"</span>\n&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp; obj2 = {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value: <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"second value\"</span>\n&nbsp;&nbsp;&nbsp; },\n&nbsp;&nbsp;&nbsp; obj3 = obj2;\n&nbsp;\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">change</span><span class=\"params\" style=\"box-sizing: border-box;\">(num, name, obj1, obj2)</span> {</span>\n&nbsp;&nbsp;&nbsp;&nbsp;num = num * <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;name = <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"Paul Irish\"</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;obj1 = obj2;\n&nbsp;&nbsp;&nbsp;&nbsp;obj2.value = <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"new value\"</span>;\n}\n&nbsp;\nchange(num, name, obj1, obj2);\n&nbsp;\nconsole.log(num); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">// 10</span>\nconsole.log(name);<span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">// \"Addy Osmani\"</span>\nconsole.log(obj1.value);<span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"first value\"</span>\nconsole.log(obj2.valuee);<span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"new value\"</span>\nconsole.log(obj3.valuee);<span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//\"new value\"        </span>\n     </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"http://snook.ca/archives/javascript/javascript_pass\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Snook: passing by value or reference</a></p></div><div id=\"memoization\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">17. memoization</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;How could you implement cache to save calculation time for a recursive fibonacci function?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;You could use poor man's memoization with a global variable. If fibonacci is already calculated it is served from the global memo array otherwise it is calculated.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> memo = [];\n\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">_fibonacci</span><span class=\"params\" style=\"box-sizing: border-box;\">(n)</span> {</span>\n   <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span>(memo[n]){    \n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> memo[n];\n   }\n   <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">else</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (n &lt; <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">2</span>){\n     <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>;\n   }<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">else</span>{\n     fibonacci(n-<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">2</span>) + fibonacci(n-<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>);\n   }\n}\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Better Implementation:&nbsp;</span><a href=\"http://www.sitepoint.com/implementing-memoization-in-javascript/\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">implement memoization in JavaScript</a></p></div><div id=\"cacheFunction\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">18. Cache function execution</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;How could you cache execution of any function?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;You could have a method where you will pass a function and it will internally maintain a cache object where calculated value will be cached. When you will call the function with same argument, the cached value will be served.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">cacheFn</span><span class=\"params\" style=\"box-sizing: border-box;\">(fn)</span> {</span>\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> cache={};\n    \n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(arg)</span>{</span>\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (cache[arg]){\n           <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> cache[arg];\n        }\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">else</span>{\n           cache[arg] = fn(arg);\n            <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> cache[arg];\n        }\n    }\n}\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;What if you are passing more than one argument?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span>First we have to use arguments to get all the parameters passed to the function and then we can generate key for the cache object. Generating key for the cache object could be tricky and one solution could be just get the all the parameters and concatenate those. Look at the code below.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> args = arguments;  \n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> key = [].slice.call(args).join(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">''</span>);\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span>(cache[key]){\n      <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> cache[key];\n  }\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">else</span>{\n      cache[key] = fn.apply(thi, args);\n      <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> cache[key];\n  }\n}\n        </code></pre></div><div id=\"chianing\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">19. JQuery style chaining</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;If you need to implement the following chaining with call back, how will you implement it?</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">slow</span><span class=\"params\" style=\"box-sizing: border-box;\">(callback)</span> {</span>\n    setTimeout(<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span>{</span>\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (Math.random() &gt; <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">0.5</span>) {\n            <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> callback(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"Error 417\"</span>,<span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">null</span>)\n        }\n        callback(<span class=\"literal\" style=\"box-sizing: border-box; color: rgb(239, 239, 175);\">null</span>, {id:<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">123</span>})\n    },<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">500</span>);\n}\n\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">exec</span><span class=\"params\" style=\"box-sizing: border-box;\">(fn)</span>{</span>\n<span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//write your code here</span>\n}\n\nexec(slow).done(<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(data)</span>{</span>\n    console.log(data);\n}).fail(<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(err)</span>{</span>\n    console.log(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">\"Error: \"</span> + err);\n})\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">Too much sleepy now. will try to put it up tomorrow.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> obj = {   <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">// every method returns obj---------v</span>\n    first: <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span> console.log(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'first'</span>);   <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> obj; },\n    second: <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span> console.log(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'second'</span>); <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> obj; },\n    third: <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span> console.log(<span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'third'</span>);   <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> obj; }\n}\n\nobj.first().second().third();\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"http://blog.buymeasoda.com/creating-a-jquery-like-chaining-api/\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">jquery like chaining</a>&nbsp;or&nbsp;<a href=\"http://stackoverflow.com/questions/7475336/how-does-jquery-chaining-work\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">jquery like chaining</a></p></div><div id=\"animation\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">20. Animation</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:&nbsp;</span>How could you implement moveLeft animation?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:</span>&nbsp;Use setInterval that will place the element to the left position by some pixels in every 10ms. Hence, you will see the element moving towards the desired position. When you call setInterval, it returns a timeId. After reaching the desired location, you have to clear the time interval so that function will not be called again and again in every 10ms.</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">moveLeft</span><span class=\"params\" style=\"box-sizing: border-box;\">(elem, distance)</span> {</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> left = <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">0</span>;\n\n  <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">frame</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span>\n    left++;\n    elem.style.left = left + <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'px'</span>;\n\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (left == distance)\n      clearInterval(timeId)\n  }\n\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> timeId = setInterval(frame, <span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">// draw every 10ms</span>\n}\n        </code></pre></div><div id=\"currying\" style=\"box-sizing: border-box;\"><h2 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 30px;\">21. Currying</h2><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Question:</span>&nbsp;How would you implement currying for any functions?</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">What is curring:</span>&nbsp;Curring is partial invocation of a function. Currying means first few arguments of a function is pre-processed and a function is returned. The returning function can add more arguments to the curried function. It's like if you have given one or two spice to the curry and cooked little bit, still you can add further spice to it. A simple example will look like-</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">addBase</span><span class=\"params\" style=\"box-sizing: border-box;\">(base)</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(num)</span>{</span>\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> base + num;\n  }\n}\n\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> addTen = addBase(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">10</span>);\naddTen(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">5</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//15</span>\naddTen(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">80</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//90</span>\naddTen(-<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">5</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//5</span>\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Explanation:</span>&nbsp;You are creating a closure that return a function. When you are curring with a new number, new number is added to the base you have provided.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Answer:&nbsp;</span>You can add a curry method to the prototype of Function. If now parameters is passed to curry, you simply return the current function. If you have provided arguments to curry there are two steps</p><ul style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Step-1:</span>&nbsp;Concatenate old arguments (provided while creating curry), with new arguments (added after cooking little bit) by using&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">args.concat(toArray(arguments))</code></li><li style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Step-2:</span>&nbsp;Pass all the arguments to the function by using apply.</li><li style=\"box-sizing: border-box;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Extra:</span>&nbsp;Just be careful to retain the value of this.</li></ul><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"php\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\nFunction.prototype.curry = <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span>\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">if</span> (arguments.length&lt;<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1</span>) {\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>; <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//nothing to curry. return function</span>\n    }\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">self</span> = <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>;\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> args = toArray(arguments);\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">()</span> {</span>\n        <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">self</span>.apply(<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">this</span>, args.concat(toArray(arguments)));\n    }\n}\n\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">toArray</span><span class=\"params\" style=\"box-sizing: border-box;\">(args)</span> {</span>\n    <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">Array</span>.prototype.slice.call(args);\n}\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">To use it:</span>&nbsp;Just pass the argument to the function.curry method and a function will be returned. Use returned function for further currying</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-bottom: 10px; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\"><code class=\"javascript\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0.5em; color: rgb(220, 220, 220); background-color: rgb(63, 63, 63); white-space: pre-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; display: block; background-position: initial initial; background-repeat: initial initial;\">\n<span class=\"function\" style=\"box-sizing: border-box;\"><span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">function</span> <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">converter</span> = <span class=\"title\" style=\"box-sizing: border-box; color: rgb(239, 239, 143);\">function</span><span class=\"params\" style=\"box-sizing: border-box;\">(factor, symbol, input)</span>{</span>\n  <span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">return</span> input * factor + symbol;\n}\n\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> milesToKm = converter.curry(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">1.62</span>, <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'km'</span>);\nmileToKm(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">3</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//result here</span>\n\n<span class=\"keyword\" style=\"box-sizing: border-box; color: rgb(227, 206, 171);\">var</span> kgToLb = converter.curry(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">2.2</span>, <span class=\"string\" style=\"box-sizing: border-box; color: rgb(204, 147, 147);\">'lb'</span>);\nkgToLb(<span class=\"number\" style=\"box-sizing: border-box; color: rgb(140, 208, 211);\">3</span>); <span class=\"comment\" style=\"box-sizing: border-box; color: rgb(127, 159, 127);\">//result here </span>\n        </code></pre><p style=\"box-sizing: border-box; margin: 0px 0px 10px;\">ref:&nbsp;<a href=\"http://fr.umio.us/favoring-curry/\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">Favoring Curry</a>,&nbsp;<a href=\"http://javascriptweblog.wordpress.com/2010/04/05/curry-cooking-up-tastier-functions/\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">curry: cooking up tastier functions</a></p></div><div style=\"box-sizing: border-box;\"><h3 style=\"box-sizing: border-box; font-family: inherit; font-weight: 500; color: inherit; margin-top: 20px; margin-bottom: 10px; font-size: 24px;\">Deleted Questions</h3><ul style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><li style=\"box-sizing: border-box;\">In JavaScript&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">isNaN(undefined)</code>&nbsp;returns true. how could you fix it? Answer: use&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">function isReallyNaN (x){return x!==x;}</code></li><li style=\"box-sizing: border-box;\">What are differences between host object and native object?&nbsp;<a href=\"http://stackoverflow.com/a/7614380/1535443\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">read answer here</a></li><li style=\"box-sizing: border-box;\">Why extending build in JavaScript object is a bad idea? Answer: google it</li><li style=\"box-sizing: border-box;\">How will you get query string in a browsers URL?&nbsp;<a href=\"http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript?page=3&amp;tab=votes#tab-top\" style=\"box-sizing: border-box; color: rgba(218, 209, 149, 0.980392); text-decoration: none; background-position: 0px 0px; background-repeat: initial initial;\">detail answer</a>&nbsp;or&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); white-space: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">window.location.search;</code></li><li style=\"box-sizing: border-box;\">Why does nearly every object have a toString method?</li><li style=\"box-sizing: border-box;\">Why Everything in JavaScript acts like an object, with the only two exceptions being null and undefined?</li><li style=\"box-sizing: border-box;\">How would you perform inheritance in JavaScript?</li><li style=\"box-sizing: border-box;\">How would you apply asynchronous call without any help of library</li><li style=\"box-sizing: border-box;\">What is the difference between slice, substr, substring?</li></ul></div></div>"
    }
  ]
}