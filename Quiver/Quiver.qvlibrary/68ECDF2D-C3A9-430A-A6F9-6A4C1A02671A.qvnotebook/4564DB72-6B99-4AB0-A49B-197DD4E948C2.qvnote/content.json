{
  "title": "Network, Operating System and so on",
  "cells": [
    {
      "type": "text",
      "data": "<div><h1 itemprop=\"name\" style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; font-size: 22px; line-height: 1.3; color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\">1.&nbsp;<a href=\"http://stackoverflow.com/questions/2092527/what-happens-when-you-type-in-a-url-in-browser\" class=\"question-hyperlink\" style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; font-size: 24px; text-decoration: none; cursor: pointer; color: rgb(34, 36, 38); font-weight: normal; line-height: 1.35;\">what happens when you type in a URL in browser</a></h1></div><div><table style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; font-size: 13px; color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px;\"><tr style=\"margin: 0px; padding: 0px; border: 0px;\"><td class=\"votecell\" style=\"margin: 0px; padding: 0px 15px 0px 0px; border: 0px; vertical-align: top;\"><div class=\"vote\" style=\"margin: 0px; padding: 0px; border: 0px; text-align: center; min-width: 46px;\"><span itemprop=\"upvoteCount\" class=\"vote-count-post \" style=\"margin: 8px 0px; padding: 0px; border: 0px; font-size: 20px; display: block; color: rgb(119, 119, 119);\">300</span><a class=\"vote-down-off\" title=\"This answer is not useful\" style=\"margin: 0px auto 10px; padding: 0px; border: 0px; font-size: 1px; cursor: pointer; color: rgb(0, 119, 204); background-image: url(http://cdn.sstatic.net/stackoverflow/img/sprites.svg?v=a7723f5f7e59), none; overflow: hidden; display: block; text-indent: -9999em; width: 40px; height: 30px; background-position: 0px -220px; background-repeat: no-repeat no-repeat;\">down vote</a></div></td><td class=\"answercell\" style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: top;\"><div class=\"post-text\" itemprop=\"text\" style=\"margin: 0px 0px 5px; padding: 0px; border: 0px; font-size: 15px; width: 660px; word-wrap: break-word; line-height: 1.3;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">In an extremely rough and simplified sketch, assuming the simplest possible HTTP request, no proxies, IPv4 and no problems in any step:</p><ol style=\"margin: 0px 0px 1em 30px; padding: 0px; border: 0px; list-style-position: initial; list-style-image: initial;\"><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser checks cache; if requested object is in cache and is fresh, skip to #9</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser asks OS for server's IP address</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">OS makes a DNS lookup and replies the IP address to the browser</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser opens a TCP connection to server (this step is much more complex with HTTPS)</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser sends the HTTP request through TCP connection</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser receives HTTP response and may close the TCP connection, or reuse it for another request</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser checks if the response is a redirect or a conditional response (3xx result status codes), authorization request (401), error (4xx and 5xx), etc.; these are handled differently from normal responses (2xx)</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">if cacheable, response is stored in cache</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser decodes response (e.g. if it's gzipped)</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">browser determines what to do with response (e.g. is it a HTML page, is it an image, is it a sound clip?)</li><li style=\"margin: 0px; padding: 0px; border: 0px; word-wrap: break-word;\">browser renders response, or offers a download dialog for unrecognized types</li></ol><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">Again, discussion of each of these points have filled countless pages; take this only as a short summary. Also, there are many other things happening in parallel to this (processing typed-in address, speculative prefetching, adding page to browser history, displaying progress to user, notifying plugins and extensions, rendering the page while it's downloading, pipelining, connection tracking for keep-alive, checking for malicious content etc.) - and the whole operation gets an order of magnitude more complex with HTTPS (certificates and ciphers and pinning, oh my!).</p></div></td></tr></tbody></table></div>"
    },
    {
      "type": "text",
      "data": "<div><br></div><div><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; font-size: 15px; clear: both; color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\">2. High level overview of a HTTP request from the browser:</p><ol style=\"margin: 0px 0px 1em 30px; padding: 0px; border: 0px; font-size: 15px; list-style-position: initial; list-style-image: initial; color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\"><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">You enter \"facebook.com\" into the address bar.</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">Browser resolves this to the numeric IP address (this can be cached by the OS or require a trip out to a DNS server).</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">Browser issues a \"HTTP/GET\" request. It passes along an HttpRequest which includes metadata about the browser, user preferences (like preferred language) and any stored cookies for that domain.</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">Facebook servers receive the request and their code begins to craft a response.<ul style=\"margin: 0px 0px 0px 30px; padding: 0px; border: 0px; list-style: disc;\"><li style=\"margin: 0px; padding: 0px; border: 0px; word-wrap: break-word;\">Facebook will use the passed information including cookies to determine who the user is and what information to send back</li></ul></li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">A HTTP Response is returned from Facebook including a status line (200 OK, etc). Headers which include content-type, etc and the HTML body.</li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">The browser receives the Response and begins to parse it for display.&nbsp;<ul style=\"margin: 0px 0px 0px 30px; padding: 0px; border: 0px; list-style: disc;\"><li style=\"margin: 0px; padding: 0px; border: 0px; word-wrap: break-word;\">The HTML body will include links to CSS, JS and images. All of these will trigger additional calls back to servers to retrieve those bits</li></ul></li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">The browser layout engine will start to assemble the final page for display.<ul style=\"margin: 0px 0px 0px 30px; padding: 0px; border: 0px; list-style: disc;\"><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\">CSS information may alter the layout and look of the page</li><li style=\"margin: 0px; padding: 0px; border: 0px; word-wrap: break-word;\">JS and DHTML may alter the layout of the page</li></ul></li><li style=\"margin: 0px; padding: 0px; border: 0px; word-wrap: break-word;\">The final page is assembled and rendered to the end user.</li></ol></div>"
    },
    {
      "type": "text",
      "data": "3.&nbsp;<div><span style=\"color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif; font-size: 15px;\">&nbsp; This is pretty off topic for this site, but it might be fun to try to answer this complex question:</span><ol style=\"margin: 0px 0px 1em 30px; padding: 0px; border: 0px; font-size: 15px; list-style-position: initial; list-style-image: initial; color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\"><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">Your browser, if it doesn't already know, will ask your OS's DNS system what the address (IP address) of the host (\"www.google.com,\" for example) is. If your OS doesn't know, it will query third-party DNS servers (those of your ISP, for example).</p></li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">Once an address is obtained, your web browser establishes a TCP/IP socket connection, typically on TCP port 80, with the web server at the IP address it resolved the host name to.</p></li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">Once your browser has established this connection, it sends an HTTP GET request to the web server for whatever resource was requested in your URL. For example,&nbsp;<a href=\"http://www.google.com/\" rel=\"nofollow\" style=\"margin: 0px; padding: 0px; border: 0px; text-decoration: none; cursor: pointer; color: rgb(0, 89, 153);\">http://www.google.com/</a>&nbsp;would mean you'd send a '/' request to whatever web server is at www.google.com.</p></li><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; word-wrap: break-word;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">The web server will then, typically, respond to the request with an HTTP response, typically containing HTML. Your web browser downloads this response.</p></li><li style=\"margin: 0px; padding: 0px; border: 0px; word-wrap: break-word;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;\">Your web browser renders the HTML. It may need to send additional requests for any scripts, stylesheets, images, or other resources linked to in the HTML.</p></li></ol><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; font-size: 15px; clear: both; color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\">That's a really basic outline. To get the full picture, you should do some research into DNS, TCP/IP, HTTP, and HTML.</p></div>"
    },
    {
      "type": "text",
      "data": "<h2 style=\"box-sizing: border-box; font-family: 'Segoe UI', Arial, sans-serif; font-weight: 400; margin: 10px 0px; font-size: 30px; color: rgb(0, 0, 0);\"><p style=\"box-sizing: border-box; font-family: Verdana, sans-serif; font-size: 15px;\">The Hypertext Transfer Protocol (HTTP) is designed to enable communications between clients and servers.</p><p style=\"box-sizing: border-box; font-family: Verdana, sans-serif; font-size: 15px;\">HTTP works as a request-response protocol between a client and server.</p><p style=\"box-sizing: border-box; font-family: Verdana, sans-serif; font-size: 15px;\">A web browser may be the client, and an application on a computer that hosts a web site may be the server.</p><p style=\"box-sizing: border-box; font-family: Verdana, sans-serif; font-size: 15px;\">Example: A client (browser) submits an HTTP request to the server; then the server returns a response to the client. The response contains status information about the request and may also contain the requested content.</p><div><br></div></h2><h2 style=\"box-sizing: border-box; font-family: 'Segoe UI', Arial, sans-serif; font-weight: 400; margin: 10px 0px; font-size: 30px; color: rgb(0, 0, 0);\">Two HTTP Request Methods: GET and POST</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: Verdana, sans-serif; font-size: 15px;\">Two commonly used methods for a request-response between a client and server are: GET and POST.</p><ul style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: Verdana, sans-serif; font-size: 15px;\"><li style=\"box-sizing: border-box;\"><b style=\"box-sizing: border-box;\">GET</b>&nbsp;- Requests data from a specified resource</li><li style=\"box-sizing: border-box;\"><b style=\"box-sizing: border-box;\">POST</b>&nbsp;- Submits data to be processed to a specified resource</li></ul>"
    }
  ]
}