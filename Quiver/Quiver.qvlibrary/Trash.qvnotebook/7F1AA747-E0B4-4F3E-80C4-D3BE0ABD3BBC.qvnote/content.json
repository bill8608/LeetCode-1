{
  "title": "concept",
  "cells": [
    {
      "type": "text",
      "data": "<div>// 1. Binary Tree vs. Hashtable, and when to use which</div><div><br></div><div>// 2. regular expression, file parser</div><div>regular expression for phone numbers(\\d{3}\\-\\d{3}\\-\\d{4})</div><div><br></div><div>// 3. arraylist vs. linkedlist</div><div><br></div><div>// 4. hashmap vs. treemap</div><div><br></div><div>// 5. DFS vs. BFS</div><div><br></div><div>// 6. interface vs. abstract class</div><div><br></div><div>// 7. linux grep, find target in files</div><div><br></div><div>// 8. explain hashmap</div><div><br></div><div>// 9. hashtable knowledge, time complexity</div><div><br></div><div>// 10. set vs. map</div><div><br></div><div>// 11. tree traversal</div><div><br></div><div>// 12. find duplicate integer in large files: cat,sort,unique,diff</div><div><br></div><div>// 13. object oriented</div><div><br></div><div>// 14. vector vs. linkedlist</div><div><br></div><div>// 15. interface</div><div><br></div><div>16. why amazon</div><div><br></div><div>// 17. hashtable, hash function, collision</div><div><br></div><div>// 18. binary search tree</div><div><br></div><div>// 19. priority queue</div><div><br></div><div>// 20. hashmap insert,get</div><div><br></div><div>// 21. difference between map and list</div><div>&nbsp;    when to use list or map</div><div><br></div><div>// 22. process vs. thread</div><div><br></div><div>// 23. lock, dead lock</div><div><br></div><div>// 24. what will happen if there are too many locks in program</div><div><br></div><div>// 25. design patter (singleton, factory)</div><div><br></div><div>// 26. object vs. class</div><div><br></div><div>// 27. polymorphism, encapsulation</div><div><br></div><div>// 28. vector vs. map  and time complexity</div><div><br></div><div>// 29. implement map insert(), find()</div><div><br></div><div>// 30. many elements have same hashcode in hashmap: linear chaining, probing</div><div><br></div><div>// 31. priority queue: how to implement, insert, get time, O(k) space:how to add elements</div><div><br></div><div>// 32. hashtable: time complexity, how to store in memory</div><div><br></div><div><br></div><div><br></div>"
    }
  ]
}