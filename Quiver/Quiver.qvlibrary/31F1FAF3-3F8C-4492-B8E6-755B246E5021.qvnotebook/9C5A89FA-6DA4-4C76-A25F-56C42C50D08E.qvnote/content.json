{
  "title": "Should You Use Inline-Blocks As A Substitute For Floats?",
  "cells": [
    {
      "type": "text",
      "data": "<h2 class=\"ttl\" style=\"height: 38px; line-height: 38px; margin: 30px 0px 20px; font-size: 18px; font-weight: normal; font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53;\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/inline-blocks/\" style=\"font-family: Helvetica, Arial, sans-serif; font-size: 15px; cursor: pointer; color: rgb(41, 180, 240);\">http://www.vanseodesign.com/css/inline-blocks/</a></h2><h2 class=\"ttl\" style=\"height: 38px; line-height: 38px; margin: 30px 0px 20px; font-size: 18px; font-weight: normal; font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53;\">应不应该使用inline-block代替float</h2><div class=\"txt txt-all\" style=\"line-height: 1.6; margin-top: 18px; font-size: 14px; color: rgb(0, 0, 0); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53;\"><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/elastic-layout-code/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">CSS布局</a>创建网站,浮动绝对占据了很大的比例.大块区域如主内容及侧边栏,以及在其中的小块区域,都可以看到浮动的影子.这里浮动是唯一的解决方案吗?</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">浮动通常表现正常，但有时候搞起来会很纠结。特别是处理内部容器中的浮动，比如对一排图片使用浮动后对齐出现问题。Inline-block是我们的另一种选择。使用这种属性可以模拟部分<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/understanding-css-floats/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">浮动的特征</a>，而不需要处理一些浮动带来的问题。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">Inline-block不是什么新鲜话题了，估计你也用过。不过我最近才是用到这个属性。之前的几个站点上，有展示一系列照片的需求，我就用inline-block代替了浮动。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><img title=\"应不应该使用inline-block代替float - zx_1258 - 冰点男孩\" alt=\"box module\" src=\"quiver-image-url/DF2A2F26E6D2BB4F075262B76DBAFE3A.jpg\" style=\"border: 1px solid rgb(204, 204, 204); vertical-align: middle; max-width: 678px; padding: 2px; width: 560px;\"></p><h4 style=\"margin: 0px 0px 5px; font-size: 16px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif;\">inline-block是什么？</h4><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.w3.org/TR/CSS21/visuren.html#display-prop\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">Inline-block</a>是元素<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/display-property/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">display属性的一个值</a>。这个名字的由来是因为，display设置这个值的元素，兼具行内元素（ inline elements）跟块级元素（block elements）的特征。</p><ol style=\"margin-top: 1em; margin-bottom: 1em; margin-left: 0px; padding-bottom: 0.25em; padding-left: 2.5em; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px; line-height: 22px;\"><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>块级元素（block elements）</strong>,来源于<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/display-property/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">CSS盒子模型</a>。块级元素包含width height,padding,border与margin，他们的排列方式是从上到下排列。 行内元素，排列方式是水平排列。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>行内元素（inline elements）</strong>排列方式是水平排列。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>行内块元素（inline-block elements）</strong>在内部他的表现类似<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.quirksmode.org/css/display.html\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">block元素</a>，比如他拥有block元素的width height,padding,border与margin，而外部的排列方式有类似行内元素，即水平排列，而不是像块级元素一样从上到下<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/css-stack-z-index/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">排列</a></li></ol><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">如果你考虑了上面这些东东，你可以了解到，inline-block元素跟元素设置浮动后的表现差别并不是很大。对盒子设置浮动后，同样会水平排列。虽然他们实现的原理不同，但内部表现为块级元素，水平排列这种需求，浮动跟inline-block都适合实现。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><img title=\"应不应该使用inline-block代替float - zx_1258 - 冰点男孩\" alt=\"box module\" src=\"quiver-image-url/B8CC95DEFC2CA472F4A89A3968FE8C2C.jpg\" style=\"border: 1px solid rgb(204, 204, 204); vertical-align: middle; max-width: 678px; padding: 2px; width: 560px;\"></p><h4 style=\"margin: 0px 0px 5px; font-size: 16px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif;\">inline-block和float的区别</h4><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">虽然设置浮动跟设置inline-block有些特征类似，但两者的<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.onderhond.com/blog/inline-block-vs-float\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">区别</a>还是非常明显的:</p><ol style=\"margin-top: 1em; margin-bottom: 1em; margin-left: 0px; padding-bottom: 0.25em; padding-left: 2.5em; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px; line-height: 22px;\"><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>文档流（Document flow）</strong>:浮动元素会脱离文档流，并使得周围元素<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.ternstyle.us/blog/float-vs-inline-block\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">环绕这个元素</a>。而inline-block元素仍在文档流内。因此设置inline-block不需要清除浮动。当然，周围元素不会环绕这个元素，你也不可能通过清除inline-block就让一个元素跑到下面去。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>水平位置（Horizontal position）</strong>：很明显你不能通过给父元素设置text-align:center让浮动元素居中。事实上定位类属性设置到父元素上，均不会影响父元素内浮动的元素。但是父元素内元素如果设置了display：inline-block，则对父元素设置一些定位属性会影响到子元素。（这还是因为浮动元素脱离文档流的<a target=\"_blank\" rel=\"nofollow\" href=\"http://joshnh.com/2012/02/07/why-you-should-use-inline-block-when-positioning-elements/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">关系</a>）。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>垂直对齐（Vertical alignment）</strong>：inline-block元素沿着默认的基线对齐。浮动元素紧贴顶部。你可以通过vertical属性<a target=\"_blank\" rel=\"nofollow\" href=\"http://designshack.net/articles/css/whats-the-deal-with-display-inline-block/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">设置这个默认基线</a>，但对浮动元素这种方法就不行了。这也是我倾向于inline-block的主要原因。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>空白（Whitespace）</strong>：inline-block包含html空白节点。如果你的html中一系列元素每个元素之间都换行了，当你对这些元素设置inline-block时，这些元素之间就会出现空白。而浮动元素会忽略空白节点，互相紧贴</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>IE6和IE7</strong>：Ie67对此属性部分支持。如果你要兼容这些浏览器，必须解决这个问题。这不是个大问题，但值得留意一下。</li></ol><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><img title=\"应不应该使用inline-block代替float - zx_1258 - 冰点男孩\" alt=\"box module\" src=\"quiver-image-url/D1DFE4033204B5F7CE05F79F25F9F787.jpg\" style=\"border: 1px solid rgb(204, 204, 204); vertical-align: middle; max-width: 678px; padding: 2px; width: 560px;\"></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">现在我们对块级元素设置了display：inline-block，图片左侧，元素之间出现空白。如果我们移除元素之间的空白（换行），就得到了图片右侧的效果。这是唯一的区别。(详细介绍可以参阅<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.w3cplus.com/css/fighting-the-space-between-inline-block-elements\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">如何解决inline-block元素的空白间距</a>)</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><strong>解决空白问题</strong></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">你现在估计已经跃跃欲试了，不过估计不想让那些空白出现。这里有一些方法来<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.w3cplus.com/css/fighting-the-space-between-inline-block-elements\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">去掉空白</a>:</p><ol style=\"margin-top: 1em; margin-bottom: 1em; margin-left: 0px; padding-bottom: 0.25em; padding-left: 2.5em; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px; line-height: 22px;\"><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>删除html中的空白</strong>：不要让元素之间换行，这可能比较蛋疼，但也是一种方法，特别是你元素不多的时候。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>使用负边距</strong>：你可以用负边距来补齐空白。但你需要调整font-size，因为空白的宽度与这个属性有关系。我认为是0.25em，但我不确定。如果有人知道可以留言告诉我。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>给父元素设置font-size:0</strong>：不管空白多大，由于空白跟font-size的关系，设置这个属性即可把空白的宽度设置为0.在实际使用的时候，你还需要给子元素重新设置font-size。</li></ol><h4 style=\"margin: 0px 0px 5px; font-size: 16px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif;\">什么时候使用inline-block，什么时候使用float</h4><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://css-tricks.com/forums/discussion/13524/inline-block-vs-float/p1\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">什么时候使用</a>，取决于你的设计稿跟解决方法。如果你需要文字环绕容器，那浮动是不二选择。如果你需要居中对齐元素，inline-block是个好选择。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">最终，这可以归结为float跟inline-block的两种属性作用后的区别，你需要对其作出选择。</p><ol style=\"margin-top: 1em; margin-bottom: 1em; margin-left: 0px; padding-bottom: 0.25em; padding-left: 2.5em; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px; line-height: 22px;\"><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>使用inline-block</strong>：当你需要控制元素的垂直对齐跟水平排列时，使用inline-block。</li><li style=\"margin: 0px 0px 0px 20px; padding: 0px;\"><strong>使用浮动：</strong>当你需要让元素环绕某一个元素时，或者需要支持旧版本ie，或者不想处理inline-block带来的空白问题时，使用浮动。</li></ol><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><img title=\"应不应该使用inline-block代替float - zx_1258 - 冰点男孩\" alt=\"box module\" src=\"quiver-image-url/F614D05570A473398FD17F421CC345FA.jpg\" style=\"border: 1px solid rgb(204, 204, 204); vertical-align: middle; max-width: 678px; padding: 2px; width: 560px;\"></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">上图，把一系列元素设置了浮动，因为盒子二号宽度的关系，可以发现盒子五号被挤进去了（这些元素都脱离了文档流），这是图片排列中很常见的问题。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><strong>浮动、inline-block和图像排列</strong></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">我使用inline-block主要是为了处理垂直对齐问题。我想这也是很多人使用这个属性的原因。我制作的很多站点都不可避免的带有一些<a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.teamtreehouse.com/using-inline-block-to-display-a-product-grid-view\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">图片列表</a>。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">若父元素中的图片等高，设置浮动就会工作正常。但一旦有一列图片比较高时，图片的排列就会出现问题。这是因为浮动后，图片脱离了文档流。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">而inline-block由于未脱离文档流，不会出现这个问题。如果你想再创建一列图片时，不会受到上一列图片inline:block的影响。而你在使用时需要时刻注意清除浮动，当内容不断变化时这很容易产生bug。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">这里有个更明显的例子来体现inline-block跟float的区别：</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">我制作了一个<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/blog/demo/inline-block/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">demo</a>来展示一下两个写法效果的区别</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><img title=\"应不应该使用inline-block代替float - zx_1258 - 冰点男孩\" alt=\"box module\" src=\"quiver-image-url/5C781827C658F00D2F63B73BE7C05C86.jpg\" style=\"border: 1px solid rgb(204, 204, 204); vertical-align: middle; max-width: 678px; padding: 2px; width: 560px;\"></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">上面的块级元素被设置了inline-block。由于他们没有脱离文档流，所以元素不会被某个过长的列挤上来。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><strong>inline-block导航</strong></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">另一种inline-block的适用场景：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/simple-navigation-bar-with-css-and-xhtml/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">横向导航栏</a>。通常，我们一般会设置a元素display：block然后进行浮动来制作。有时候我会直接通过对列表元素设置display:inline来制作。如果在制作中，你需要设置不同的display属性来处理浮动，那么inline-block不失为一种更好的解决方案。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">当你需要将元素排列成一行或者多行时，更倾向于考虑使用inline-block代替float。当然，直接使用table也是一种方法，他毕竟是专门用来处理横向与纵向排列的元素的。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">如果你需要创建一个很复杂的包含行列的布局，<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/tables\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">table</a>是你的最佳选择，不过你同样也可以考虑inline-block</p><h4 style=\"margin: 0px 0px 5px; font-size: 16px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif;\">总结</h4><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">我们经常使用浮动，但浮动并不是唯一的解决方案。有时候inline-block会更好，特别是你想排列一些图片，或者横向排列链接时。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">Inline-block元素带有一些行内元素的特征（横向排列），同时内部也拥有块级元素的属性。这个跟浮动很类似，只不过有些区别。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">这些区别决定了你该使用哪种方案。如果你很纠结<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/dynamic-vertical-centering/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">垂直对齐</a>问题或者横向排列元素，不妨使用inline-block。如果你需要对一个元素跟围绕他的一些元素进行更多控制，你需要浮动。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">当然，table也是你处理一些问题的最佳方案。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">同样我想说的，这不是什么新东西，但我会通过这篇文档还有<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/blog/demo/inline-block/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">demo</a>来介绍一些应该使用但有些人尚未使用inline-block的场景。</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">非常感谢你阅读此文，希望这篇文章可以真正在你学习使用css的时候帮到你。当然有意见跟建议你也可以提出来~</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\"><strong>译者手语：</strong>整个翻译依照原文线路进行，并在翻译过程略加了个人对技术的理解。如果翻译有不对之处，还烦请同行朋友指点。谢谢！</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">如需转载烦请注明出处：</p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">英文原文：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vanseodesign.com/css/inline-blocks/\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">http://www.vanseodesign.com/css/inline-blocks/</a></p><p style=\"margin: 0px 0px 10px; line-height: 28px; color: rgb(64, 64, 64); font-family: Helvetica, Arial, sans-serif; font-size: 15px;\">中文译文：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.w3cplus.com/css/inline-blocks.html\" style=\"cursor: pointer; color: rgb(41, 180, 240);\">http://www.w3cplus.com/css/inline-blocks.html</a></p></div>"
    }
  ]
}