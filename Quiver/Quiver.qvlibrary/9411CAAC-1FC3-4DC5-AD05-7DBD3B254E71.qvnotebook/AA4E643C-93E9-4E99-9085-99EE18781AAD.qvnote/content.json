{
  "title": "Greedy",
  "cells": [
    {
      "type": "text",
      "data": "<h3>1. 1 Jump Game I</h3><div><div><p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp; Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. &nbsp;</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp; Determine if you are able to reach the last index.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp; For example:<br style=\"box-sizing: border-box;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A =&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[2,3,1,1,4]</code>, return&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">true</code>.</p><p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A =&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[3,2,1,0,4]</code>, return&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">false</code>.</p></div></div>"
    },
    {
      "type": "code",
      "language": "java",
      "data": "public class Solution {\r\n    public boolean canJump(int[] nums) {\r\n        if (nums == null || nums.length == 0) {\r\n            return false;\r\n        }\r\n        int maxCover = nums[0];\r\n        for (int i = 1; i < nums.length; i++) {\r\n            if (i <= maxCover && nums[i] + i >= maxCover) {\r\n                maxCover = nums[i] + i;\r\n            }\r\n        }\r\n        return maxCover >= nums.length - 1;\r\n    }\r\n} "
    },
    {
      "type": "text",
      "data": "<h3>1.2 Jump Game II</h3><div><p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;For example:<br style=\"box-sizing: border-box;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Given array A =&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">[2,3,1,1,4]</code></p><p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The minimum number of jumps to reach the last index is&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">2</code>. (Jump&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">1</code>&nbsp;step from index 0 to 1, then&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;\">3</code>&nbsp;steps to the last index.)</p></div>"
    },
    {
      "type": "code",
      "language": "java",
      "data": "public class Solution {\r\n    public int jump(int[] nums) {\r\n        if (nums == null || nums.length == 0) {\r\n            return 0;\r\n        }\r\n        int maxCover = 0;\r\n        int steps = 0;\r\n        int curCover = 0;\r\n        for (int i = 0; i < nums.length; i++) {\r\n            if (i > curCover) {\r\n                steps++;\r\n                curCover = maxCover;\r\n            }\r\n            maxCover = Math.max(maxCover, nums[i] + i);\r\n        }\r\n        return steps;\r\n    }\r\n}"
    },
    {
      "type": "text",
      "data": "<h3>1.3 Candy</h3><div><br></div>"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}